###
###'           ejabberd configuration file
###
### The parameters used in this configuration file are explained at
###
###       https://docs.ejabberd.im/admin/configuration
###
### The configuration file is written in YAML.
### *******************************************************
### *******           !!! WARNING !!!               *******
### *******     YAML IS INDENTATION SENSITIVE       *******
### ******* MAKE SURE YOU INDENT SECTIONS CORRECTLY *******
### *******************************************************
### Refer to http://en.wikipedia.org/wiki/YAML for the brief description.
###

hosts:
#  - "xmpp.local"
  - "XX.XX.XX.XX"

loglevel: 5
log_rotate_size: 10485760
#log_rotate_date: ""
log_rotate_count: 1
#log_rate_limit: 100

certfiles:
#  - "/etc/ssl/ejabberd/server.pem"
  - "/etc/ssl/ejabberd/ca/XX.XX.XX.XX_comb.pem"
  - "/etc/ssl/ejabberd/ca/upload_comb.pem"
#  - "/etc/ssl/ejabberd/ca/myupload.pem"
#  - "/opt/ejabberd/conf/server.pem"
##  - "/etc/letsencrypt/live/localhost/fullchain.pem"
##  - "/etc/letsencrypt/live/localhost/privkey.pem"

#ca_file: "/opt/ejabberd/conf/cacert.pem"
ca_file: "/etc/ssl/ejabberd/ca/calist.pem"

##
### MySQL server:
###
sql_type: mysql
sql_server: "localhost"
sql_database: "ejabberd"
sql_username: "ejabberd"
sql_password: "testpassword@1234"
default_db: sql
sql_port: 3306
auth_password_format: scram

#trusted_proxies: all
#trusted_proxies: ["127.0.0.1", "192.168.80.0/20"]
disable_sasl_mechanisms: ["X-OAUTH2"]

listen:
  -
    port: 5222
    ip: "XX.XX.XX.XX"
    module: ejabberd_c2s
    max_stanza_size: 262144
    shaper: c2s_shaper
    access: c2s
    starttls_required: true
    protocol_options:
      - "no_sslv2"
      - "no_sslv3"
      - "no_tlsv1"
      - "no_tlsv1_1"
    ciphers: "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256"
    starttls: true
    tls_compression: false
    dhfile: "/etc/ssl/ejabberd/dh2048.pem"
#  -
#    port: 5269
#    ip: "::"
#    module: ejabberd_s2s_in
#    max_stanza_size: 524288
  -
    port: 5443
    ip: "XX.XX.XX.XX"
    module: ejabberd_http
    tls: true
    request_handlers:
      "/admin": ejabberd_web_admin
    #  "/api": mod_http_api
    #  "/bosh": mod_bosh
    #  "/captcha": ejabberd_captcha
    # "/upload": mod_http_upload
    #  "/ws": ejabberd_http_ws
    #  "/oauth": ejabberd_oauth
    #protocol_options: 
    #  - "no_sslv2"
    #  - "no_sslv3"
    #  - "no_tlsv1"
    #  - "no_tlsv1_1"
    #dhfile: "/etc/ssl/ejabberd/dh2048.pem"
    #ciphers: "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256"
    
  -
    port: 5280
    ip: "XX.XX.XX.XX"
    tls: true
    module: ejabberd_http
    request_handlers:
      #"/admin": ejabberd_web_admin
      "/api": mod_http_api
      "/bosh": mod_bosh
      "/captcha": ejabberd_captcha
      "/upload": mod_http_upload
      "/ws": ejabberd_http_ws
      "/oauth": ejabberd_oauth
    #web_admin: true
    #http_bind: true
    #captcha: true
  -
    port: 1883
    ip: "::"
    module: mod_mqtt
    backlog: 1000
  -
    port: 3478
    transport: udp
    module: ejabberd_stun
    use_turn: true
    turn_min_port: 49152
    turn_max_port: 65535
    ##The server's public IPv4 address:
    turn_ip: XX.XX.XX.XX
  -
    port: 5349
    transport: tcp
    module: ejabberd_stun
    use_turn: true
    tls: true
    turn_min_port: 49152
    turn_max_port: 65535
    ip: XX.XX.XX.XX
    turn_ip: XX.XX.XX.XX

s2s_use_starttls: optional

acl:
  local:
    user_regexp: ""
  loopback:
    ip:
      - 127.0.0.0/8
      - ::1/128
      - ::FFFF:127.0.0.1/128
  admin:
    user:
      - "admin@xmpp.local"
      - "admin@XX.XX.XX.XX"

access_rules:
  local:
    allow: local
  c2s:
    deny: blocked
    allow: all
  announce:
    allow: admin
  configure:
    allow: admin
  muc_create:
    allow: local
  pubsub_createnode:
    allow: local
  trusted_network:
    allow: loopback

api_permissions:
  "console commands":
    from:
      - ejabberd_ctl
    who: all
    what: "*"
  "admin access":
    who:
      access:
        allow:
          acl: loopback
          acl: admin
      oauth:
        scope: "ejabberd:admin"
        access:
          allow:
            acl: loopback
            acl: admin
    what:
      - "*"
      - "!stop"
      - "!start"
  "public commands":
    who:
      ip: 127.0.0.1/8
    what:
      - status
      - connected_users_number

#shaper:
#  normal: 1000
#  fast: 50000

shaper:
  normal:
    rate: 3000
    burst_size: 20000
  fast: 100000
  #soft_upload_quota: 250 #Mib
  #hard_upload_quota: 10000 #Mib

shaper_rules:
  max_user_sessions: 10
  max_user_offline_messages:
    5000: admin
    100: all
  c2s_shaper:
    none: admin
    normal: all
  s2s_shaper: fast

max_fsm_queue: 10000

#acme:
#   contact: "mailto:admin@localhost"
#   ca_url: "https://acme-v01.api.letsencrypt.org"

modules:
  mod_adhoc: {}
  mod_admin_extra: {}
  mod_announce:
    access: announce
  mod_avatar: {}
  mod_blocking: {}
  mod_bosh: {}
  mod_caps: {}
  mod_carboncopy: {}
  mod_client_state: {}
  mod_configure: {}
  mod_disco: {}
  mod_fail2ban: {}
  mod_http_api: {}
  mod_http_upload:
    #put_url: https://@HOST@:5443/upload
    put_url: https://@HOST@:5280/upload
    get_url: https://@HOST@:5280/upload
    ############### START RND ON HTTP UPLOAD ####################
    #host: "upload.@HOST@"
    docroot: "/opt/ejabberd/upload"  # this must be a valid path, user ownership and SELinux flags must be set accordingly.
    access: local
    max_size: 25000000 #25 MByte
    #max_size: infinity #Infinity
    thumbnail: false
    file_mode: "0644"
    dir_mode: "0744"
    #custom_headers:
    #  "Access-Control-Allow-Origin": "*"
    #  "Access-Control-Allow-Methods": "OPTIONS, HEAD, GET, PUT"
    #  "Access-Control-Allow-Headers": "Authorization"
    #  "Access-Control-Allow-Credentials": "true"
  mod_http_upload_quota:
    max_days: 2
    
################ END RND ON HTTP UPLOAD ##################
  mod_last: {}
  mod_mam:
    ## Mnesia is limited to 2GB, better to use an SQL backend
    ## For small servers SQLite is a good fit and is very easy
    ## to configure. Uncomment this when you have SQL configured:
    ## db_type: sql
    assume_mam_usage: true
    default: never
  mod_mqtt: {}
  mod_muc:
    access:
      - allow
    access_admin:
      - allow: admin
    access_create: muc_create
    access_persistent: muc_create
    access_mam:
      - allow
    default_room_options:
      allow_subscription: true  # enable MucSub
      mam: false
  mod_muc_admin: {}
  mod_offline:
    access_max_user_messages: max_user_offline_messages
    db_type: sql
  mod_ping: {}
    #send_pings: true
    #ping_interval: 30
    #ping_ack_timeout: 32
    #timeout_action: kill
  mod_privacy: {}
  mod_private: {}
  mod_proxy65:
    access: local
    max_connections: 5
  mod_pubsub:
    access_createnode: pubsub_createnode
    plugins:
      - flat
      - pep
    force_node_config:
      ## Avoid buggy clients to make their bookmarks public
      storage:bookmarks:
        access_model: whitelist
  mod_push: {}
  mod_push_keepalive: {}
  mod_register:
    ## Only accept registration requests from the "trusted"
    ## network (see access_rules section above).
    ## Think twice before enabling registration from any
    ## address. See the Jabber SPAM Manifesto for details:
    ## https://github.com/ge0rg/jabber-spam-fighting-manifesto
    ip_access: trusted_network
  mod_roster:
    versioning: true
  mod_s2s_dialback: {}
  mod_shared_roster: {}
  mod_stream_mgmt: {}
    #max_ack_queue: 5000
    #max_resume_timeout: 30
    #resend_on_timeout: true
    #resume_timeout: 30
    #ack_timeout: 30
    #queue_type: ram
  mod_vcard: {}
  mod_vcard_xupdate: {}
  mod_version:
    show_os: false
  mod_stun_disco:
    credentials_lifetime: 12h
    services:
        -
          host: XX.XX.XX.XX
          port: 3478
          type: stun
          transport: udp
          restricted: false
        -
          host: XX.XX.XX.XX
          port: 3478
          type: turn
          transport: udp
          restricted: true
        -
          host: XX.XX.XX.XX
          port: 5349
          type: stuns
          transport: tcp
          restricted: false
        -
          host: XX.XX.XX.XX
          port: 5349
          type: turns
          transport: tcp
          restricted: true

### Local Variables:
### mode: yaml
### End:
### vim: set filetype=yaml tabstop=8
